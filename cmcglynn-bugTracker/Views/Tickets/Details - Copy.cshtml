@model cmcglynn_bugTracker.Models.CodeFirst.Ticket

@{
    ViewBag.Title = "Details";
}

<h2 style="text-shadow:-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;text-decoration: underline; text-align:center; font-family:'Goudy Old Style'; color:red; font-size:45px">TICKET DETAILS</h2>

<div>
    @*<h4>Ticket</h4>*@
    <hr />
    <dl class="dl-horizontal">
        <dt>AssignToUser
            @*@Html.DisplayNameFor(model => model.AssignToUser.FirstName)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AssignToUser.FirstName)
        </dd>

        <dt>
            OwnerUser
            @*@Html.DisplayNameFor(model => model.OwnerUser.FirstName)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OwnerUser.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Project.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Project.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketPriority.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketPriority.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketStatus.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketStatus.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketType.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketType.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Updated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Updated)
        </dd>

    </dl>

   @using (Html.BeginForm("AttachmentCreate", "Tickets", FormMethod.Post, new { @class = "ticket-ticketAttachment", enctype = "multipart/form-data" }))
   {
    @Html.AntiForgeryToken()

    <input type="file" name="files" multiple required />
    <input type="hidden" name="ticketId" value="@Model.Id" hidden />
    <button class="btn btn-default btn-lg" type="submit">Attach</button>
   }
@foreach (var attachment in Model.Attachments)
{
    <div>
        <a href="/TicketAttachments/@attachment.FileUrl" target="_blank">@attachment.FileUrl</a><br />
        @Html.ActionLink("Delete Attachment", "AttachmentDelete", "Tickets", new { id = attachment.Id }, null)
    </div>
}
</div>

<hr />
<!-- Comments Form -->
<div class="card my-4">
    <h5 class="card-header">Leave a Comment:</h5>
    <div class="card-body">
        @using (Html.BeginForm("CommentCreate", "Tickets"))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <textarea class="form-control" name="Body" rows="7" required></textarea>
                <input type="number" name="TicketId" value="@Model.Id" hidden />
                @*<input type="text" name="Body" rows="7" required />*@
            </div>
            <button type="submit" class="btn btn-primary" value="Send">Submit</button>
        }
    </div>
</div>
        
<!-- Single Comment -->
@foreach (var comment in Model.Comments)
{
    if (comment != null && comment.AuthorId != null)
    {
        <div class="media mb-4">
            @*<img class="d-flex mr-3 rounded-circle" src="http://placehold.it/50x50" alt="">*@
            <div class="media-body">
                <p>@comment.Body</p>
                <h5 class="mt-0">@comment.Author.FullName Posted on @DateTimeOffset.Now</h5>@*<span>Posted on @comment.Created</span>*@
            </div>
        </div>
        @Html.ActionLink("Delete Comment", "CommentDelete", "Tickets", new { id = comment.Id }, null)

    }
}

<h3 style="text-align:center; font-family:'Goudy Old Style'; color:red; font-size:45px">NEW TICKET HISTORY</h3>
<hr />
@foreach (var history in Model.Histories)
{
    if (history.Property == "TICKET COMMENT")
    {
        <div>
            <p><span style="font-weight: 600">A new comment was added to the ticket: <br />@history.Property</span> - @history.Author.FullName <br />@history.Created</p>
        <em>"@history.NewValue"</em>
        </div>
        <hr />




    }
    else if (history.Property == "TICKET ATTACHMENT")
    {
        <div>
            <p>
                <span style="font-weight: 600">A new attachment was added to the ticket: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <a href="/TicketAttachments/@history.NewValue">@history.NewValue</a>
            </p>
        </div>
    }

    else if (history.Property == "COMMENT DELETED")
    {
        <div>
            <p>
                <span style="font-weight: 600">A comment was deleted: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }

    else if (history.Property == "TICKET ASSIGNED")
    {
        <div>
            <p>
                <span style="font-weight: 600">A ticket was assigned: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }

    else if (history.Property == "ATTACHMENT DELETED")
    {
        <div>
            <p>
                <span style="font-weight: 600">An attachment was deleted: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }
    else if (history.Property == "TICKET EDITED: TITLE")
    {
        <div>
            <p>
                <span style="font-weight: 600">A ticket title was edited: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }
    else if (history.Property == "TICKET EDITED: DESCRIPTION")
    {
        <div>
            <p>
                <span style="font-weight: 600">A ticket description was edited: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }
    else if (history.Property == "TICKET EDITED: TYPE")
    {
        <div>
            <p>
                <span style="font-weight: 600">A ticket type was edited: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }
    else if (history.Property == "TICKET EDITED: PRIORITY")
    {
        <div>
            <p>
                <span style="font-weight: 600">A ticket priority was edited: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }
    else if (history.Property == "TICKET EDITED: STATUS")
    {
        <div>
            <p>
                <span style="font-weight: 600">A ticket status was edited: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }
    else if (history.Property == "TICKET EDITED: ASSIGNED")
    {
        <div>
            <p>
                <span style="font-weight: 600">A ticket assign was edited: <br /> @history.Property</span> - @history.Author.FullName <br />
                @history.Created<br />
                <em>"@history.NewValue"</em>
            </p>
        </div>
    }

}
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
